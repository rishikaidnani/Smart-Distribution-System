/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CentreForDiseaseControl;

import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.PHDEnterprise;
import Business.Enterprise.SiteEnterprise;
import Business.Order.OrderItem;
import Business.Organization.CDC.CDCOperationsOrganization;
import Business.Organization.Organization;
import Business.Organization.Sites.ProviderOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.BadVaccineToCdc;
import Business.WorkRequest.InformBadVaccineToSites;
import Business.WorkRequest.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rishika Idnani
 */
public class ViewFeedbackFromProviders extends javax.swing.JPanel {

    /**
     * Creates new form ViewFeedbackFromProviders
     */
    private JPanel userProcessContainer;
    private CDCEnterprise enterprise;
    private CDCOperationsOrganization organization;
    private UserAccount userAccount;

    public ViewFeedbackFromProviders(JPanel userProcessContainer, CDCEnterprise enterprise, CDCOperationsOrganization organization, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.organization = organization;
        this.userAccount = userAccount;

        populateVaccineTable();
    }

    public void populateVaccineTable() {
        DefaultTableModel model = (DefaultTableModel) vaccineJTable.getModel();
        model.setRowCount(0);

        for (PHDEnterprise p : enterprise.getPhdList()) {
            for (SiteEnterprise s : p.getSiteList()) {
                for (Organization o : s.getOrganizationDirectory().getOrganizationList()) {
                    if (o instanceof ProviderOrganization) {
                        for (WorkRequest w : o.getWorkQueue().getWorkRequestList()) {
                            if (w instanceof BadVaccineToCdc) {
                                BadVaccineToCdc report = (BadVaccineToCdc) w;
                                Object row[] = new Object[5];
                                row[0] = report.getOrderItem();
                                row[1] = report.getOrder();
                                row[2] = report.getOrderItem().getVaccine().getVaccineManufacturer();
                                row[3] = report.getOrderItem().getManufacturingBatch();
                                if (report.getOrderItem().getIfBadInformed().equals("No")) {
                                    row[4] = "Yet to be informed";
                                } else if (report.getOrderItem().getIfBadInformed().equals("Informed")) {
                                    row[4] = "Informed to all the sites";
                                }
                                model.addRow(row);
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        vaccineJTable = new javax.swing.JTable();
        backJButton2 = new javax.swing.JButton();
        informJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("View Feedback");

        vaccineJTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        vaccineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Vaccine Name", "Order Placed on", "Manufacturer", "Manufacturing Date", "Status"
            }
        ));
        vaccineJTable.setRowHeight(25);
        jScrollPane1.setViewportView(vaccineJTable);

        backJButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        informJButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        informJButton.setText("Inform Sites about this batch");
        informJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(informJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton2)
                    .addComponent(informJButton))
                .addContainerGap(55, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void informJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = vaccineJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Kindly select a row");
            return;
        }
        OrderItem orderItem = (OrderItem) vaccineJTable.getValueAt(selectedRow, 0);

        InformBadVaccineToSites workRequest = new InformBadVaccineToSites();
        organization.getWorkQueue().addRequest(workRequest);
        workRequest.setSender(userAccount.getPerson());
        workRequest.setOrderItem(orderItem);
        workRequest.setMessage("Vaccine is bad Alert!");
        orderItem.setIfBadInformed("Informed");
        populateVaccineTable();
    }//GEN-LAST:event_informJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton2;
    private javax.swing.JButton informJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable vaccineJTable;
    // End of variables declaration//GEN-END:variables
}
