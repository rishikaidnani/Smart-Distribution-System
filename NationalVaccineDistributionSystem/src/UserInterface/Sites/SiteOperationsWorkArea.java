/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Sites;

import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.NationalDistributorEnterprise;
import Business.Enterprise.SiteEnterprise;
import Business.Organization.Distributor.DistributionCentre;
import Business.Organization.Organization;
import Business.Organization.Sites.SiteOperationOrganization;
import Business.WorkRequest.ShipmentToSite;
import Business.WorkRequest.WorkRequest;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rishika Idnani
 */
public class SiteOperationsWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form SiteOperationsWorkArea
     */
    private JPanel userProcessContainer;
    private SiteOperationOrganization siteOperationOrg;
    private CDCEnterprise cdcEnterprise;
    private SiteEnterprise siteEnterprise;
    private NationalDistributorEnterprise nationalDistributor;

    public SiteOperationsWorkArea(JPanel userProcessContainer, SiteOperationOrganization siteOperationOrg,
            CDCEnterprise cdcEnterprise, SiteEnterprise siteEnterprise, NationalDistributorEnterprise nationalDistributor) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.siteOperationOrg = siteOperationOrg;
        this.cdcEnterprise = cdcEnterprise;
        this.siteEnterprise = siteEnterprise;
        this.nationalDistributor = nationalDistributor;
        populateVaccineTable();
    }

    public void populateVaccineTable() {
        DefaultTableModel model = (DefaultTableModel) orderJTable.getModel();
        model.setRowCount(0);

        for (Organization o : nationalDistributor.getOrganizationDirectory().getOrganizationList()) {
            if (o instanceof DistributionCentre) {
                DistributionCentre distributionCentre = (DistributionCentre) o;
                if (distributionCentre.getStateName().equals(siteEnterprise.getStateName())) {
                    for (WorkRequest workRequest : distributionCentre.getWorkQueue().getWorkRequestList()) {
                        if (workRequest instanceof ShipmentToSite) {
                            ShipmentToSite request = (ShipmentToSite) workRequest;
                            if (request.getOrderItem().getIsOrderItemShippedToSite().equals("Approved")
                                    && request.getSiteEnterprise() == siteEnterprise) {
                                Object row[] = new Object[5];
                                row[0] = request.getOrder();
                                row[1] = request.getOrderItem();
                                row[2] = request.getOrderItem().getTotalQuantity();
                                row[3] = request.getOrder().getProvider().getName();
                                row[4] = (6.25 / 100) * request.getOrderItem().getTotalPrice();
                                model.addRow(row);
                            }
                        }
                    }
                }
            }
        }

//        for (WorkRequest workRequest : distributionCentre.getWorkQueue().getWorkRequestList()) {
//            if (workRequest instanceof ShipmentToSite) {
//                ShipmentToSite request = (ShipmentToSite) workRequest;
//                if (request.getOrderItem().getIsOrderItemShippedToSite().equals("Approved")
//                        && request.getSiteEnterprise() == siteEnterprise) {
//                    Object row[] = new Object[5];
//                    row[0] = request.getOrder();
//                    row[1] = request.getOrderItem();
//                    row[2] = request.getOrderItem().getTotalQuantity();
//                    row[3] = request.getOrder().getProvider().getName();
//                    row[4] = (6.25 / 100) * request.getOrderItem().getTotalPrice();
//                    model.addRow(row);
//                }
//            }
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDescriptionJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        vaccineReceivedJLabel = new javax.swing.JLabel();

        panelDescriptionJLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        panelDescriptionJLabel.setText("Site Operations Work Area");

        orderJTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order time", "Vaccine Name", "Vaccine Quantity", "Ordered by", "Total invoice"
            }
        ));
        orderJTable.setRowHeight(30);
        jScrollPane1.setViewportView(orderJTable);

        vaccineReceivedJLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        vaccineReceivedJLabel.setText("Vaccines received");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelDescriptionJLabel)
                            .addComponent(vaccineReceivedJLabel))
                        .addContainerGap(439, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDescriptionJLabel)
                .addGap(20, 20, 20)
                .addComponent(vaccineReceivedJLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderJTable;
    private javax.swing.JLabel panelDescriptionJLabel;
    private javax.swing.JLabel vaccineReceivedJLabel;
    // End of variables declaration//GEN-END:variables
}
