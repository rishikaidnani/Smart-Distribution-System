/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Sites;

import Business.Enterprise.CDCEnterprise;
import Business.Enterprise.SiteEnterprise;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.Sites.ProviderOrganization;
import Business.Person.Provider;
import Business.UserAccount.UserAccount;
import Business.WorkRequest.BadVaccineToCdc;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rishika Idnani
 */
public class ViewMyOrders extends javax.swing.JPanel {

    /**
     * Creates new form ViewMyOrders
     */
    private JPanel userProcessContainer;
    private ProviderOrganization providerOrganization;
    private CDCEnterprise cdcEnterprise;
    private SiteEnterprise siteEnterprise;
    private UserAccount userAccount;
    
    public ViewMyOrders(JPanel userProcessContainer, CDCEnterprise cdcEnterprise, SiteEnterprise siteEnterprise, ProviderOrganization providerOrganization, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.providerOrganization = providerOrganization;
        this.cdcEnterprise = cdcEnterprise;
        this.siteEnterprise = siteEnterprise;
        this.userAccount = userAccount;
        populateOrderTable();
    }
    
    public void populateOrderTable() {
        DefaultTableModel model = (DefaultTableModel) orderJTable.getModel();
        model.setRowCount(0);
        
        Provider provider = (Provider) userAccount.getPerson();
        for (Order order : provider.getOrderedList()) {
            Object row[] = new Object[1];
            row[0] = order;
            model.addRow(row);
        }
    }
    
    public void populateVaccineTable(Order order) {
        DefaultTableModel model = (DefaultTableModel) vaccineJTable.getModel();
        model.setRowCount(0);
        
        for (OrderItem oi : order.getOrderItemList()) {
            if (oi.getProvider() == userAccount.getPerson()
                    && oi.getIsOrderItemShippedToSite().equals("Approved")) {
                Object row[] = new Object[6];
                row[0] = oi;
                row[1] = oi.getVaccine().getDisease();
                row[2] = oi.getTotalQuantity();
                row[3] = oi.getVaccine().getVaccineManufacturer();
                row[4] = oi.getManufacturingBatch();
                if (oi.getIfBad().equals("No")) {
                    row[5] = "Not Applicable";
                } else if (oi.getIfBad().equals("Reported")) {
                    row[5] = "Reported as bad";
                }
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDescriptionJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        orderDetailsJLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vaccineJTable = new javax.swing.JTable();
        backJButton2 = new javax.swing.JButton();
        clickJButton = new javax.swing.JButton();
        reportJButton = new javax.swing.JButton();

        panelDescriptionJLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        panelDescriptionJLabel.setText("View my Orders");

        orderJTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Order Date/Time"
            }
        ));
        jScrollPane1.setViewportView(orderJTable);

        orderDetailsJLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        orderDetailsJLabel.setText("Order Details/Order Items recieved");

        vaccineJTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        vaccineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Vaccine", "Disease", "Total Quantity", "Manufacturer", "Manufacturing Batch", "Defective Vaccine Report"
            }
        ));
        vaccineJTable.setRowHeight(25);
        jScrollPane2.setViewportView(vaccineJTable);

        backJButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        backJButton2.setText("<< Back");
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });

        clickJButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        clickJButton.setText("Click here!");
        clickJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickJButtonActionPerformed(evt);
            }
        });

        reportJButton.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        reportJButton.setText("Report a vaccine as bad to CDC");
        reportJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelDescriptionJLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(orderDetailsJLabel)
                                .addGap(18, 18, 18)
                                .addComponent(clickJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backJButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reportJButton))
                        .addGap(0, 107, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDescriptionJLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderDetailsJLabel)
                    .addComponent(clickJButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(reportJButton)
                .addGap(28, 28, 28)
                .addComponent(backJButton2)
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void clickJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderJTable.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Kindly select an order");
            return;
        }
        
        Order order = (Order) orderJTable.getValueAt(selectedRow, 0);
        
        populateVaccineTable(order);
    }//GEN-LAST:event_clickJButtonActionPerformed

    private void reportJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orderJTable.getSelectedRow();
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Kindly select an order");
            return;
        }
        Order order = (Order) orderJTable.getValueAt(selectedRow, 0);
        
        int selectedRow1 = vaccineJTable.getSelectedRow();
        if (selectedRow1 < 0) {
            JOptionPane.showMessageDialog(null, "Kindly select an order");
            return;
        }
        OrderItem orderItem = (OrderItem) vaccineJTable.getValueAt(selectedRow1, 0);
        
        BadVaccineToCdc workRequest = new BadVaccineToCdc();
        providerOrganization.getWorkQueue().addRequest(workRequest);
        workRequest.setOrder(order);
        workRequest.setOrderItem(orderItem);
        orderItem.setIfBad("Reported");
        populateVaccineTable(order);
    }//GEN-LAST:event_reportJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton2;
    private javax.swing.JButton clickJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel orderDetailsJLabel;
    private javax.swing.JTable orderJTable;
    private javax.swing.JLabel panelDescriptionJLabel;
    private javax.swing.JButton reportJButton;
    private javax.swing.JTable vaccineJTable;
    // End of variables declaration//GEN-END:variables
}
